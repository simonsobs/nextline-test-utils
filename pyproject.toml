[build-system]
requires = ["hatchling", "hatch-regex-commit"]
build-backend = "hatchling.build"

[project]
name = "nextline-test-utils"
dynamic = ["version"]
description = 'A collection of utilities for testing Nextline packages'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Simons Observatory", email = "so_software@simonsobservatory.org" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "hypothesis>=6.88",
  "black>=24.3",
  "graphql-core>=3.2",
  "typing-extensions>=4.8",
]

[project.optional-dependencies]
tests = [
  "pytest-asyncio>=0.18",
  "pytest-cov>=3.0",
  "pytest-timeout>=2.1",
  "pytest>=7.0",
]

[project.urls]
Documentation = "https://github.com/simonsobs/nextline-test-utils#readme"
Issues = "https://github.com/simonsobs/nextline-test-utils/issues"
Source = "https://github.com/simonsobs/nextline-test-utils"

[tool.hatch.version]
source = "regex_commit"
path = "src/nextline_test_utils/__about__.py"
tag_sign = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
timeout = 60
addopts = "--doctest-modules --durations=10"
# doctest_optionflags = ["ELLIPSIS", "NORMALIZE_WHITESPACE",]
doctest_optionflags = ["ELLIPSIS"]
norecursedirs = "build"
filterwarnings = ["ignore::hypothesis.errors.NonInteractiveExampleWarning"]
log_cli = false
log_cli_level = "INFO"

[tool.ruff]
line-length = 88
extend-exclude = ["src/nextline_rdb/alembic/versions", "example_script"]

[tool.ruff.format]
quote-style = "preserve"

[tool.ruff.lint]
select = [
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
]
ignore = [
  "E203", # Whitespace before '{symbol}'
  "E265", # Block comment should start with #
  "E266", # Too many leading # before block comment
  "E501", # Line too long ({width} > {limit})
  "E741", # Ambiguous variable name '{name}'
]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.isort]
#

[tool.coverage.run]
source_pkgs = ["nextline_test_utils", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
nextline_test_utils = [
  "src/nextline_test_utils",
  "*/nextline-test-utils/src/nextline_test_utils",
]
tests = ["tests", "*/nextline-test-utils/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.mypy]
disallow_untyped_defs = true
